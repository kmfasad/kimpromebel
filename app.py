import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage

bot = Bot(token="7980968906:AAHlFiJRX9K0dkeMZw3M87Qszgm68E4IdOI")
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

ADMIN_ID = 433698201  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π ID

main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è")],
        [KeyboardButton(text="üõ† –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")],
        [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
    ],
    resize_keyboard=True
)

# –ú–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
class Consultation(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()

class ProjectOrder(StatesGroup):
    waiting_for_description = State()
    waiting_for_name = State()
    waiting_for_phone = State()

@dp.message(Command("start"))
async def start_cmd(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KIMpromebelbot. –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üëá ",
        reply_markup=main_kb
    )

@dp.message()
async def handle_buttons(message: types.Message, state: FSMContext):
    text = message.text
    current_state = await state.get_state()

    # --- –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ---
    if text == "‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
        await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? ‚úçÔ∏è")
        await state.set_state(Consultation.waiting_for_name)

    elif current_state == Consultation.waiting_for_name.state:
        await state.update_data(name=text)
        await message.answer(f"{text}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±")
        await state.set_state(Consultation.waiting_for_phone)

    elif current_state == Consultation.waiting_for_phone.state:
        await state.update_data(phone=text)
        data = await state.get_data()
        name = data["name"]
        phone = data["phone"]

        await message.answer("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è! üôå")
        await bot.send_message(
            ADMIN_ID,
            f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é:\n\nüë§ –ò–º—è: {name}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüÜî –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username or '–±–µ–∑ username'}"
        )
        await state.clear()

    # --- –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–µ–∫—Ç ---
    elif text == "üõ† –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–æ–µ–∫—Ç":
        await message.answer("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç üìêüõã")
        await state.set_state(ProjectOrder.waiting_for_description)

    elif current_state == ProjectOrder.waiting_for_description.state:
        await state.update_data(description=text)
        await message.answer("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? ‚úçÔ∏è")
        await state.set_state(ProjectOrder.waiting_for_name)

    elif current_state == ProjectOrder.waiting_for_name.state:
        await state.update_data(name=text)
        await message.answer(f"{text}, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±")
        await state.set_state(ProjectOrder.waiting_for_phone)

    elif current_state == ProjectOrder.waiting_for_phone.state:
        await state.update_data(phone=text)
        data = await state.get_data()
        description = data["description"]
        name = data["name"]
        phone = data["phone"]

        await message.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è. üôå")
        await bot.send_message(
            ADMIN_ID,
            f"üìê –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø—Ä–æ–µ–∫—Ç–∞:\n\nüìù –ü—Ä–æ–µ–∫—Ç: {description}\nüë§ –ò–º—è: {name}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüÜî –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{message.from_user.username or '–±–µ–∑ username'}"
        )
        await state.clear()

    # --- –ö–æ–Ω—Ç–∞–∫—Ç—ã ---
    elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        await message.answer(
            "üìß Email: kimpromebel@gmail.com\n"
            "üì© Telegram: @mihailkuvila\n"
        )

    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ üëá")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
